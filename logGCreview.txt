-XX:+UseParallelGC -Xmx12m -Xms12m

С начало старта приложения до старта создания массива произошло 9 малых сборок.
Продолжительность: 10 cекунд
В начале used heap был 5,935.320 б
Во время сборок used heap мах доходил до 8,043.800 б

[0.008s][info][gc] Using Parallel
[1.123s][info][gc] GC(0) Pause Young (Allocation Failure) 3M->1M(11M) 2.369ms
[3.641s][info][gc] GC(1) Pause Young (Allocation Failure) 4M->2M(11M) 1.893ms
[3.693s][info][gc] GC(2) Pause Young (Allocation Failure) 5M->3M(11M) 1.159ms
[3.728s][info][gc] GC(3) Pause Young (Allocation Failure) 6M->4M(11M) 2.142ms
[3.747s][info][gc] GC(4) Pause Young (Allocation Failure) 7M->4M(11M) 1.344ms
[4.092s][info][gc] GC(5) Pause Young (Allocation Failure) 7M->5M(10M) 2.599ms
[4.164s][info][gc] GC(6) Pause Young (Allocation Failure) 7M->5M(11M) 1.982ms
[9.535s][info][gc] GC(7) Pause Young (Allocation Failure) 7M->5M(11M) 0.985ms


С момента создания массива до старта Bubble Sort произошло 2 малых и 1 большая сборка.
Продолжительность: 15 cекунд
Во время сборок used heap мах доходил до 9,137.136 б

[17.202s][info][gc] GC(8) Pause Young (Allocation Failure) 7M->6M(11M) 3.082ms
[25.203s][info][gc] GC(9) Pause Young (Allocation Failure) 8M->7M(11M) 0.940ms
[25.215s][info][gc] GC(10) Pause Full (Ergonomics) 7M->5M(11M) 11.906ms


С момента Bubble Sort до старта Insert Sort произошло 6 малых сборок.
Продолжительность Bubble Sort: 1 мин 36 cекунд
Во время сборок used heap мах доходил до 7,960.304 б

[42.220s][info][gc] GC(11) Pause Young (Allocation Failure) 7M->5M(11M) 0.715ms
[59.203s][info][gc] GC(12) Pause Young (Allocation Failure) 7M->5M(11M) 0.248ms
[76.252s][info][gc] GC(13) Pause Young (Allocation Failure) 7M->5M(11M) 0.486ms
[93.264s][info][gc] GC(14) Pause Young (Allocation Failure) 7M->5M(11M) 0.384ms
[110.277s][info][gc] GC(15) Pause Young (Allocation Failure) 7M->5M(11M) 0.370ms
[124.120s][info][gc] GC(16) Pause Young (Allocation Failure) 7M->5M(11M) 0.424ms


С момента Insert Sort до старта Merge Sort произошло 16 малых и 1 большая сборка.
Продолжительность Insert Sort: 7 cекунд
Во время сборок used heap мах доходил до 7,827.584 б

[144.068s][info][gc] GC(18) Pause Young (Allocation Failure) 7M->5M(11M) 0.345ms
[144.071s][info][gc] GC(19) Pause Young (Allocation Failure) 7M->6M(11M) 0.451ms
[144.075s][info][gc] GC(20) Pause Young (Allocation Failure) 8M->6M(11M) 0.408ms
[144.084s][info][gc] GC(21) Pause Full (Ergonomics) 6M->5M(11M) 8.527ms
[144.094s][info][gc] GC(22) Pause Young (Allocation Failure) 7M->5M(11M) 0.280ms
[144.103s][info][gc] GC(23) Pause Young (Allocation Failure) 7M->5M(11M) 0.280ms
[144.105s][info][gc] GC(24) Pause Young (Allocation Failure) 7M->6M(11M) 0.529ms
[144.108s][info][gc] GC(25) Pause Young (Allocation Failure) 8M->6M(11M) 0.361ms
[144.111s][info][gc] GC(26) Pause Young (Allocation Failure) 7M->6M(11M) 0.321ms
[144.113s][info][gc] GC(27) Pause Young (Allocation Failure) 8M->6M(11M) 0.306ms
[144.115s][info][gc] GC(28) Pause Young (Allocation Failure) 8M->6M(11M) 0.353ms
[144.118s][info][gc] GC(29) Pause Young (Allocation Failure) 8M->6M(11M) 0.263ms
[144.120s][info][gc] GC(30) Pause Young (Allocation Failure) 8M->6M(11M) 0.270ms
[144.122s][info][gc] GC(31) Pause Young (Allocation Failure) 8M->6M(11M) 0.239ms
[144.125s][info][gc] GC(32) Pause Young (Allocation Failure) 8M->6M(11M) 0.267ms
[144.127s][info][gc] GC(33) Pause Young (Allocation Failure) 8M->7M(11M) 0.301ms


С момента Merge Sort до завершения программы произошло 4 малых сборок.
Продолжительность Insert Sort: 2 cекунд
Во время сборок used heap мах доходил до 9,447.664 б

[148.247s][info][gc] GC(34) Pause Young (Allocation Failure) 9M->7M(11M) 0.450ms
[165.319s][info][gc] GC(35) Pause Young (Allocation Failure) 9M->7M(11M) 0.522ms
[183.333s][info][gc] GC(36) Pause Young (Allocation Failure) 9M->7M(11M) 0.913ms
[201.345s][info][gc] GC(37) Pause Young (Allocation Failure) 9M->7M(11M) 0.394ms




-XX:+UseG1GC -Xmx12m -Xms12m -Xlog:gc:logG1GC.txt

С начало старта приложения до старта создания массива не было сборок.
Продолжительность: 10 cекунд
В начале used heap был 5,949.000 б
В промежутке used heap мах доходил до 6,113.800 б
[0.013s][info][gc] Using G1

С момента создания массива до старта Bubble Sort произошло 22 сборки.
Продолжительность: 10 cекунд
Во время сборок used heap мах доходил до 7,162.376 б

[13.853s][info][gc] GC(0) Pause Young (Normal) (G1 Evacuation Pause) 5M->3M(12M) 4.422ms
[13.885s][info][gc] GC(1) Pause Young (Normal) (G1 Evacuation Pause) 4M->3M(12M) 2.914ms
[13.910s][info][gc] GC(2) Pause Young (Normal) (G1 Evacuation Pause) 4M->3M(12M) 1.639ms
[13.939s][info][gc] GC(3) Pause Young (Normal) (G1 Evacuation Pause) 4M->3M(12M) 1.434ms
[14.009s][info][gc] GC(4) Pause Young (Normal) (G1 Evacuation Pause) 5M->4M(12M) 1.585ms
[14.044s][info][gc] GC(5) Pause Young (Normal) (G1 Evacuation Pause) 6M->4M(12M) 2.966ms
[14.072s][info][gc] GC(6) Pause Young (Normal) (G1 Evacuation Pause) 6M->4M(12M) 1.455ms
[14.085s][info][gc] GC(7) Pause Young (Normal) (G1 Evacuation Pause) 6M->5M(12M) 1.850ms
[14.245s][info][gc] GC(8) Pause Young (Normal) (G1 Evacuation Pause) 6M->5M(12M) 2.008ms
[14.295s][info][gc] GC(9) Pause Young (Concurrent Start) (G1 Evacuation Pause) 6M->5M(12M) 1.671ms
[14.295s][info][gc] GC(10) Concurrent Mark Cycle
[14.300s][info][gc] GC(10) Pause Remark 5M->5M(12M) 1.277ms
[14.302s][info][gc] GC(10) Pause Cleanup 5M->5M(12M) 0.046ms
[14.302s][info][gc] GC(10) Concurrent Mark Cycle 6.680ms
[14.355s][info][gc] GC(11) Pause Young (Prepare Mixed) (G1 Evacuation Pause) 6M->6M(12M) 2.162ms
[14.503s][info][gc] GC(12) Pause Young (Mixed) (G1 Evacuation Pause) 7M->5M(12M) 2.612ms
[14.549s][info][gc] GC(13) Pause Young (Normal) (G1 Evacuation Pause) 6M->5M(12M) 2.079ms
[15.602s][info][gc] GC(14) Pause Young (Normal) (G1 Evacuation Pause) 6M->5M(12M) 3.156ms
[20.601s][info][gc] GC(15) Pause Young (Concurrent Start) (G1 Evacuation Pause) 6M->5M(12M) 2.837ms
[20.601s][info][gc] GC(16) Concurrent Mark Cycle
[20.607s][info][gc] GC(16) Pause Remark 5M->5M(12M) 2.822ms
[20.609s][info][gc] GC(16) Pause Cleanup 5M->5M(12M) 0.103ms
[20.609s][info][gc] GC(16) Concurrent Mark Cycle 8.143ms


С момента Bubble Sort до старта Insert Sort произошло 22 сборки.
Продолжительность Bubble Sort: 2 мин 59 cекунд
Во время сборок used heap мах доходил до 7,580.240 б

[28.452s][info][gc] GC(17) Pause Young (Prepare Mixed) (G1 Evacuation Pause) 7M->6M(12M) 1.968ms
[35.643s][info][gc] GC(18) Pause Young (Mixed) (G1 Evacuation Pause) 7M->6M(12M) 2.895ms
[43.610s][info][gc] GC(19) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->6M(12M) 1.652ms
[43.610s][info][gc] GC(20) Concurrent Mark Cycle
[43.617s][info][gc] GC(20) Pause Remark 6M->6M(12M) 2.405ms
[43.618s][info][gc] GC(20) Pause Cleanup 6M->6M(12M) 0.097ms
[43.619s][info][gc] GC(20) Concurrent Mark Cycle 8.790ms
[59.621s][info][gc] GC(21) Pause Young (Prepare Mixed) (G1 Evacuation Pause) 8M->6M(12M) 1.765ms
[67.628s][info][gc] GC(22) Pause Young (Mixed) (G1 Evacuation Pause) 7M->5M(12M) 2.772ms
[85.610s][info][gc] GC(23) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->5M(12M) 2.212ms
[85.610s][info][gc] GC(24) Concurrent Mark Cycle
[85.616s][info][gc] GC(24) Pause Remark 5M->5M(12M) 2.122ms
[85.617s][info][gc] GC(24) Pause Cleanup 5M->5M(12M) 0.088ms
[85.617s][info][gc] GC(24) Concurrent Mark Cycle 7.186ms
[102.616s][info][gc] GC(25) Pause Young (Normal) (G1 Evacuation Pause) 7M->5M(12M) 1.669ms
[119.665s][info][gc] GC(26) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->5M(12M) 1.678ms
[119.665s][info][gc] GC(27) Concurrent Mark Cycle
[119.670s][info][gc] GC(27) Pause Remark 5M->5M(12M) 1.889ms
[119.672s][info][gc] GC(27) Pause Cleanup 5M->5M(12M) 0.083ms
[119.672s][info][gc] GC(27) Concurrent Mark Cycle 6.921ms
[132.799s][info][gc] GC(28) Pause Young (Concurrent Start) (G1 Humongous Allocation) 7M->4M(12M) 2.027ms
[132.799s][info][gc] GC(29) Concurrent Mark Cycle
[132.805s][info][gc] GC(29) Pause Remark 5M->5M(12M) 2.266ms
[132.807s][info][gc] GC(29) Pause Cleanup 5M->5M(12M) 0.111ms
[132.807s][info][gc] GC(29) Concurrent Mark Cycle 8.097ms
[147.267s][info][gc] GC(30) Pause Young (Concurrent Start) (G1 Humongous Allocation) 7M->4M(12M) 1.993ms
[147.267s][info][gc] GC(31) Concurrent Mark Cycle
[147.274s][info][gc] GC(31) Pause Remark 7M->7M(12M) 2.386ms
[147.276s][info][gc] GC(31) Pause Cleanup 8M->8M(12M) 0.087ms
[147.277s][info][gc] GC(31) Concurrent Mark Cycle 9.467ms
[147.284s][info][gc] GC(32) Pause Young (Normal) (G1 Evacuation Pause) 8M->6M(12M) 1.582ms
[147.299s][info][gc] GC(33) Pause Young (Concurrent Start) (G1 Evacuation Pause) 8M->6M(12M) 1.659ms
[147.299s][info][gc] GC(34) Concurrent Mark Cycle
[147.304s][info][gc] GC(34) Pause Remark 7M->7M(12M) 1.889ms
[147.339s][info][gc] GC(34) Pause Cleanup 8M->8M(12M) 0.113ms
[147.339s][info][gc] GC(34) Concurrent Mark Cycle 39.655ms
[147.341s][info][gc] GC(35) Pause Young (Normal) (G1 Evacuation Pause) 8M->6M(12M) 1.530ms
[147.345s][info][gc] GC(36) Pause Young (Concurrent Start) (G1 Evacuation Pause) 8M->6M(12M) 1.313ms
[147.346s][info][gc] GC(37) Concurrent Mark Cycle
[147.351s][info][gc] GC(38) Pause Young (Normal) (G1 Evacuation Pause) 8M->6M(12M) 1.390ms
[147.354s][info][gc] GC(37) Pause Remark 6M->6M(12M) 2.824ms
[147.355s][info][gc] GC(37) Pause Cleanup 6M->6M(12M) 0.016ms
[147.355s][info][gc] GC(37) Concurrent Mark Cycle 9.462ms
[147.358s][info][gc] GC(39) Pause Young (Normal) (G1 Evacuation Pause) 8M->6M(12M) 1.317ms
[147.361s][info][gc] GC(40) Pause Young (Concurrent Start) (G1 Evacuation Pause) 8M->6M(12M) 1.131ms
[147.361s][info][gc] GC(41) Concurrent Mark Cycle
[147.364s][info][gc] GC(42) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 0.923ms
[147.380s][info][gc] GC(43) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 1.078ms
[147.383s][info][gc] GC(41) Pause Remark 7M->7M(12M) 2.468ms
[147.385s][info][gc] GC(44) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 0.818ms
[147.386s][info][gc] GC(41) Pause Cleanup 7M->7M(12M) 0.089ms
[147.386s][info][gc] GC(41) Concurrent Mark Cycle 24.925ms
[147.388s][info][gc] GC(45) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 0.663ms
[147.390s][info][gc] GC(46) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->6M(12M) 0.780ms
[147.390s][info][gc] GC(47) Concurrent Mark Cycle
[147.393s][info][gc] GC(48) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 1.089ms
[147.396s][info][gc] GC(49) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 0.964ms
[147.399s][info][gc] GC(47) Pause Remark 7M->7M(12M) 2.661ms
[147.401s][info][gc] GC(50) Pause Young (Normal) (G1 Evacuation Pause) 7M->6M(12M) 0.663ms
[147.401s][info][gc] GC(47) Pause Cleanup 6M->6M(12M) 0.116ms
[147.402s][info][gc] GC(47) Concurrent Mark Cycle 11.458ms
[147.403s][info][gc] GC(51) Pause Young (Prepare Mixed) (G1 Evacuation Pause) 7M->6M(12M) 0.636ms
[147.407s][info][gc] GC(52) Pause Young (Mixed) (G1 Evacuation Pause) 7M->6M(12M) 2.427ms
[147.409s][info][gc] GC(53) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->6M(12M) 0.940ms
[147.409s][info][gc] GC(54) Concurrent Mark Cycle
[147.415s][info][gc] GC(54) Pause Remark 8M->8M(12M) 1.837ms
[147.416s][info][gc] GC(54) Pause Cleanup 8M->8M(12M) 0.101ms
[147.416s][info][gc] GC(54) Concurrent Mark Cycle 7.403ms
[147.695s][info][gc] GC(55) Pause Young (Normal) (G1 Evacuation Pause) 8M->5M(12M) 1.908ms
[160.694s][info][gc] GC(56) Pause Young (Concurrent Start) (G1 Evacuation Pause) 7M->5M(12M) 1.683ms
[160.694s][info][gc] GC(57) Concurrent Mark Cycle
[160.699s][info][gc] GC(57) Pause Remark 5M->5M(12M) 2.217ms
[160.701s][info][gc] GC(57) Pause Cleanup 5M->5M(12M) 0.144ms
[160.701s][info][gc] GC(57) Concurrent Mark Cycle 7.424ms


С момента Insert Sort до старта Merge Sort лог никакой активности не показал.
Продолжительность Insert Sort: 7 cекунд
Во время сборок used heap мах доходил до 7,295.512 б

С момента Merge Sort до завершения программы лог никакой активности не показал.
Продолжительность Insert Sort: 2 cекунд
Во время сборок used heap мах доходил до 8,279.160 б




-XX:+UseZGC -Xmx16m -Xms16m -Xlog:gc:logZGC.txt

С начало старта приложения до старта создания массива произошло 21 сборок.
Продолжительность: 10 cекунд
В начале used heap был 10,485.760 б
Во время сборок used heap мах доходил до 12,582.912 б

[0.007s][info][gc] Using The Z Garbage Collector
[0.135s][info][gc] GC(0) Garbage Collection (Warmup) 4M(22%)->4M(22%)
[0.241s][info][gc] GC(1) Garbage Collection (Warmup) 4M(22%)->2M(11%)
[4.835s][info][gc] GC(2) Garbage Collection (Warmup) 10M(56%)->8M(44%)
[4.945s][info][gc] GC(3) Garbage Collection (Allocation Rate) 16M(89%)->6M(33%)
[5.040s][info][gc] GC(4) Garbage Collection (Allocation Rate) 8M(44%)->6M(33%)
[5.140s][info][gc] GC(5) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[5.254s][info][gc] GC(6) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.345s][info][gc] GC(7) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.431s][info][gc] GC(8) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[5.540s][info][gc] GC(9) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.635s][info][gc] GC(10) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.737s][info][gc] GC(11) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.848s][info][gc] GC(12) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[5.951s][info][gc] GC(13) Garbage Collection (Allocation Rate) 10M(56%)->10M(56%)
[6.032s][info][gc] GC(14) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[6.141s][info][gc] GC(15) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[6.245s][info][gc] GC(16) Garbage Collection (Allocation Rate) 10M(56%)->10M(56%)
[6.358s][info][gc] GC(17) Garbage Collection (Allocation Rate) 10M(56%)->10M(56%)
[6.436s][info][gc] GC(18) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[6.547s][info][gc] GC(19) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[6.651s][info][gc] GC(20) Garbage Collection (Allocation Rate) 10M(56%)->10M(56%)
[7.556s][info][gc] GC(21) Garbage Collection (Allocation Rate) 10M(56%)->10M(56%)


С момента создания массива до старта Bubble Sort произошло 3 малых сборок.
Продолжительность: 15 cекунд
Во время сборок used heap мах доходил до 12,582.912 б
[16.432s][info][gc] GC(22) Garbage Collection (Proactive) 12M(67%)->8M(44%)
[18.143s][info][gc] GC(23) Garbage Collection (Proactive) 10M(56%)->6M(33%)
[19.555s][info][gc] GC(24) Garbage Collection (Proactive) 8M(44%)->8M(44%)


С момента Bubble Sort до старта Insert Sort произошло 156 сборок.
Продолжительность Bubble Sort: 3 мин 8 cекунд
Во время сборок used heap мах доходил до 14,680.064 б

[27.456s][info][gc] GC(25) Garbage Collection (Proactive) 10M(56%)->6M(33%)
[29.436s][info][gc] GC(26) Garbage Collection (Proactive) 8M(44%)->6M(33%)
[31.243s][info][gc] GC(27) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[32.748s][info][gc] GC(28) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[34.249s][info][gc] GC(29) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[35.550s][info][gc] GC(30) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[36.738s][info][gc] GC(31) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[37.947s][info][gc] GC(32) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[38.955s][info][gc] GC(33) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[40.449s][info][gc] GC(34) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[42.049s][info][gc] GC(35) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[43.640s][info][gc] GC(36) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[44.848s][info][gc] GC(37) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[46.632s][info][gc] GC(38) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[48.036s][info][gc] GC(39) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[49.143s][info][gc] GC(40) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[50.049s][info][gc] GC(41) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[51.040s][info][gc] GC(42) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[51.931s][info][gc] GC(43) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[52.840s][info][gc] GC(44) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[53.637s][info][gc] GC(45) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[54.456s][info][gc] GC(46) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[56.659s][info][gc] GC(47) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[59.036s][info][gc] GC(48) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[61.238s][info][gc] GC(49) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[62.737s][info][gc] GC(50) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[64.033s][info][gc] GC(51) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[65.136s][info][gc] GC(52) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[66.044s][info][gc] GC(53) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[66.942s][info][gc] GC(54) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[67.645s][info][gc] GC(55) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[68.434s][info][gc] GC(56) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[69.445s][info][gc] GC(57) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[70.444s][info][gc] GC(58) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[71.436s][info][gc] GC(59) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[72.440s][info][gc] GC(60) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[73.432s][info][gc] GC(61) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[74.272s][info][gc] Allocation Stall (main) 11.832ms
[74.273s][info][gc] GC(62) Garbage Collection (Allocation Stall) 18M(100%)->12M(67%)
[74.290s][info][gc] Allocation Stall (main) 11.510ms
[74.291s][info][gc] GC(63) Garbage Collection (Allocation Stall) 18M(100%)->14M(78%)
[74.306s][info][gc] Allocation Stall (main) 10.994ms
[74.308s][info][gc] GC(64) Garbage Collection (Allocation Stall) 18M(100%)->14M(78%)
[74.322s][info][gc] Allocation Stall (main) 11.180ms
[74.323s][info][gc] Allocation Stall (main) 0.118ms
[74.323s][info][gc] GC(65) Garbage Collection (Allocation Stall) 18M(100%)->18M(100%)
[74.343s][info][gc] GC(66) Garbage Collection (Allocation Stall) 18M(100%)->8M(44%)
[74.446s][info][gc] GC(67) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[74.547s][info][gc] GC(68) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[74.640s][info][gc] GC(69) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[74.743s][info][gc] GC(70) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[74.853s][info][gc] GC(71) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[74.936s][info][gc] GC(72) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.057s][info][gc] GC(73) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.142s][info][gc] GC(74) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.339s][info][gc] GC(75) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.433s][info][gc] GC(76) Garbage Collection (Allocation Rate) 10M(56%)->8M(44%)
[75.571s][info][gc] GC(77) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.644s][info][gc] GC(78) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.752s][info][gc] GC(79) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.842s][info][gc] GC(80) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[75.934s][info][gc] GC(81) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[76.042s][info][gc] GC(82) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[76.141s][info][gc] GC(83) Garbage Collection (Allocation Rate) 8M(44%)->8M(44%)
[77.253s][info][gc] GC(84) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[78.548s][info][gc] GC(85) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[79.647s][info][gc] GC(86) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[81.338s][info][gc] GC(87) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[82.943s][info][gc] GC(88) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[84.153s][info][gc] GC(89) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[85.841s][info][gc] GC(90) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[87.246s][info][gc] GC(91) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[89.033s][info][gc] GC(92) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[90.740s][info][gc] GC(93) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[92.039s][info][gc] GC(94) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[93.151s][info][gc] GC(95) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[95.545s][info][gc] GC(96) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[97.446s][info][gc] GC(97) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[98.751s][info][gc] GC(98) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[100.146s][info][gc] GC(99) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[101.251s][info][gc] GC(100) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[102.835s][info][gc] GC(101) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[104.351s][info][gc] GC(102) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[106.139s][info][gc] GC(103) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[107.653s][info][gc] GC(104) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[109.345s][info][gc] GC(105) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[110.737s][info][gc] GC(106) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[111.843s][info][gc] GC(107) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[113.147s][info][gc] GC(108) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[114.639s][info][gc] GC(109) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[116.145s][info][gc] GC(110) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[117.270s][info][gc] GC(111) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[120.846s][info][gc] GC(112) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[123.534s][info][gc] GC(113) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[125.338s][info][gc] GC(114) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[126.733s][info][gc] GC(115) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[127.851s][info][gc] GC(116) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[129.431s][info][gc] GC(117) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[130.836s][info][gc] GC(118) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[131.939s][info][gc] GC(119) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[132.840s][info][gc] GC(120) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[133.832s][info][gc] GC(121) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[134.743s][info][gc] GC(122) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[135.640s][info][gc] GC(123) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[136.443s][info][gc] GC(124) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[137.240s][info][gc] GC(125) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[138.044s][info][gc] GC(126) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[138.751s][info][gc] GC(127) Garbage Collection (Proactive) 12M(67%)->8M(44%)
[139.846s][info][gc] GC(128) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[141.636s][info][gc] GC(129) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[143.255s][info][gc] GC(130) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[146.154s][info][gc] GC(131) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[148.235s][info][gc] GC(132) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[149.939s][info][gc] GC(133) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[151.241s][info][gc] GC(134) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[152.344s][info][gc] GC(135) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[153.335s][info][gc] GC(136) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[154.148s][info][gc] GC(137) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[156.541s][info][gc] GC(138) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[158.336s][info][gc] GC(139) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[159.752s][info][gc] GC(140) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[160.941s][info][gc] GC(141) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[162.140s][info][gc] GC(142) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[163.044s][info][gc] GC(143) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[164.030s][info][gc] GC(144) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[164.937s][info][gc] GC(145) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[165.745s][info][gc] GC(146) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[166.436s][info][gc] GC(147) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[167.545s][info][gc] GC(148) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[168.940s][info][gc] GC(149) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[170.134s][info][gc] GC(150) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[171.142s][info][gc] GC(151) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[172.042s][info][gc] GC(152) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[172.867s][info][gc] GC(153) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[175.742s][info][gc] GC(154) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[177.947s][info][gc] GC(155) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[179.557s][info][gc] GC(156) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[181.349s][info][gc] GC(157) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[182.840s][info][gc] GC(158) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[184.054s][info][gc] GC(159) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[185.750s][info][gc] GC(160) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[187.249s][info][gc] GC(161) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[188.637s][info][gc] GC(162) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[189.845s][info][gc] GC(163) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[191.445s][info][gc] GC(164) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[192.943s][info][gc] GC(165) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[194.738s][info][gc] GC(166) Garbage Collection (Proactive) 10M(56%)->8M(44%)
[196.143s][info][gc] GC(167) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[197.342s][info][gc] GC(168) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[198.232s][info][gc] GC(169) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[199.037s][info][gc] GC(170) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[199.836s][info][gc] GC(171) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[200.532s][info][gc] GC(172) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[201.445s][info][gc] GC(173) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[202.134s][info][gc] GC(174) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[202.844s][info][gc] GC(175) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[203.534s][info][gc] GC(176) Garbage Collection (Proactive) 12M(67%)->10M(56%)


С момента Insert Sort до старта Merge Sort произошло 33 сборок.
Продолжительность Insert Sort: 7 cекунд
Во время сборок used heap мах доходил до 12,582.912 б

[204.447s][info][gc] GC(177) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[205.233s][info][gc] GC(178) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[206.045s][info][gc] GC(179) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[206.732s][info][gc] GC(180) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[207.440s][info][gc] GC(181) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[208.239s][info][gc] GC(182) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[209.036s][info][gc] GC(183) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[209.739s][info][gc] GC(184) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[210.545s][info][gc] GC(185) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[211.444s][info][gc] GC(186) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[212.243s][info][gc] GC(187) Garbage Collection (Proactive) 12M(67%)->10M(56%)
204.447s][info][gc] GC(177) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[205.233s][info][gc] GC(178) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[206.045s][info][gc] GC(179) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[206.732s][info][gc] GC(180) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[207.440s][info][gc] GC(181) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[208.239s][info][gc] GC(182) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[209.036s][info][gc] GC(183) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[209.739s][info][gc] GC(184) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[210.545s][info][gc] GC(185) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[211.444s][info][gc] GC(186) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[212.243s][info][gc] GC(187) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[213.032s][info][gc] GC(188) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[213.732s][info][gc] GC(189) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[214.532s][info][gc] GC(190) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[215.443s][info][gc] GC(191) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[216.345s][info][gc] GC(192) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[217.143s][info][gc] GC(193) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[217.832s][info][gc] GC(194) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[218.540s][info][gc] GC(195) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[219.545s][info][gc] GC(196) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[220.535s][info][gc] GC(197) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[221.532s][info][gc] GC(198) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[222.544s][info][gc] GC(199) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[223.545s][info][gc] GC(200) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[224.446s][info][gc] GC(201) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[225.334s][info][gc] GC(202) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[226.132s][info][gc] GC(203) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[226.842s][info][gc] GC(204) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[227.544s][info][gc] GC(205) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[228.533s][info][gc] GC(206) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[229.541s][info][gc] GC(207) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[230.540s][info][gc] GC(208) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[231.546s][info][gc] GC(209) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[232.540s][info][gc] GC(210) Garbage Collection (Proactive) 12M(67%)->10M(56%)



С момента Merge Sort до завершения программы произошло 4 сборок.
Продолжительность Merge Sort: 2 cекунд
Во время сборок used heap мах доходил до 10,485.912 б

[234.541s][info][gc] GC(212) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[235.536s][info][gc] GC(213) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[236.548s][info][gc] GC(214) Garbage Collection (Proactive) 12M(67%)->10M(56%)
[237.533s][info][gc] GC(215) Garbage Collection (Proactive) 12M(67%)->12M(67%)

